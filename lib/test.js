// Generated by CoffeeScript 1.3.3
(function() {
  var Robot, evolve, robot,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  evolve = require('evolve');

  console.log("calling mutate");

  Robot = (function() {

    function Robot() {
      this.compute = __bind(this.compute, this);

      this.setVelocity = __bind(this.setVelocity, this);

    }

    Robot.prototype.setVelocity = function(x, y, z) {
      return console.log("setting velocity..");
    };

    Robot.prototype.compute = function(x, y, z) {
      var a, b, c, _ref;
      _ref = [0, 0, 0], a = _ref[0], b = _ref[1], c = _ref[2];
      evolve.mutable(function() {
        a = x * 1;
        b = y * 1;
        return c = z * 1;
      });
      return this.setVelocity(a, b, c);
    };

    return Robot;

  })();

  robot = new Robot();

  console.log("robot compute: " + (Robot.prototype.compute.toString()));

  evolve.mutate({
    obj: Robot.prototype,
    func: 'compute',
    onComplete: function() {
      return console.log("mutation completed");
    }
  });

}).call(this);
